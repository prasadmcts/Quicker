 - Add-Migration "InitialDBCreation"
 - Update-Database
 
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.3" />
  
  
 using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.SqlServer;

public class Student
{
    public int StudentId { get; set; }
    public string Name { get; set; }
    public List<Course> Courses { get; set; }
}

public class Course
{
    public int CourseId { get; set; }
    public string Name { get; set; }
    public List<Student> Students { get; set; }
}

public class MyEntityContext : DbContext
{
    protected override void OnConfiguring(DbContextOptionsBuilder opBuilder)
    {
        opBuilder.UseSqlServer("Data Source=Prasad\\SQLEXPRESS;Initial Catalog=ManyToManyNew;Integrated Security=True;MultipleActiveResultSets=True;Encrypt=True;TrustServerCertificate=True");
    }

    public DbSet<Student> Students { get; set; }
    public DbSet<Course> Courses { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        //modelBuilder.Entity<Student>()
        //    .HasMany(f => f.Courses)
        //    .WithMany(g => g.Students)
        //    .UsingEntity(t => t.ToTable("Rama"));

        modelBuilder.Entity<Student>()
            .HasMany(f => f.Courses)
            .WithMany(g => g.Students)
             .UsingEntity<Dictionary<string, object>>("StudentCourse",
                    j => j
                        .HasOne<Course>()
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Rama_CourseId")
                        .OnDelete(DeleteBehavior.Cascade),
                    j => j
                        .HasOne<Student>()
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Rama_StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade));
    }
}

partial class Program
{
    public static void Main(string[] args)
    {
        MyEntityContext ctx = new MyEntityContext();

        //ctx.Students.Add(new Student { Name = "Prasad1" });
        //ctx.Courses.Add(new Course() { Name = "C1#" });

        ctx.Students.First(x => x.StudentId == 1).Courses.AddRange(ctx.Courses.Where(x => x.CourseId == 1));

        ctx.SaveChanges();
    }
}

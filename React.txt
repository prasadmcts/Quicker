React:
Version: What is latest version of React 18.2.0 and what you've used

Project Architecture:

Client Components:

Explain React Hooks:
useEffect: It serves the same purpose as componentDidMount, componentDidUpdate, and componentWillUnmount in React classes
XXX useEffect: You should use multiple effects to separate concerns as suggested by reactjs.org.
               1. Get Employee, if Employee changes  2. Get Employer if Employer changes
React relies on the order in which Hooks are called.
useState: const [age, setAge] = useState(42);
useContext: lets you subscribe to React context without introducing nesting
useReducer: lets you manage local state of complex components with a reducer:
useMemo: This will be used for recomputing the memoized value when there is a change in one of the dependencies. This optimization will help for avoiding expensive calculations on each render.

PropTypes: with Hooks
https://github.com/facebook/prop-types#proptypescheckproptypes

App.propTypes = {  
    propArray: PropTypes.array.isRequired,   
    email: isEmail,
}  

const isEmail = function(props, propName, componentName) {
}
App.defaultProps = {  
    propArray: [1,2,3,4,5]
}  

================================
TIPS for Hooks: 
  Only Call Hooks at the Top Level
       Don’t call Hooks inside loops, conditions, or nested functions.
  Only Call Hooks from React Functions
       Don’t call Hooks from regular JavaScript functions.

React Context/Redux/ReduxSaga/

Saga is like a separate thread in your application, that's solely responsible for side effects. redux-saga is a redux middleware, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.

differences between call() and put() in redux-saga?
Both call() and put() are effect creator functions. call() function is used to create effect description, which instructs middleware to call the promise. put() function creates an effect, which instructs middleware to dispatch an action to the store.

Axios/Fetch

1. when we make API call we get some Network Glitch (NG) is a temporary interruption of the network connection between a client and a DataBase (DB) server during an open session or a transaction.

How you handle? axios-retry

Axios plugin that intercepts failed requests and retries them whenever possible

Common Libs: Formik, Ag-Grid

CSS: 

JEST:
Cypress:

ES6: Find and Filter, every and some, 
Combine 2 arrays using spread const merged = [...arr1, ...arr2];
Remove duplciates [...new Set(arr1)];
Promise.all() vs. Promise.allSettled()
Which is better promise or await?
Nullish Coalescing Operator 
Optional Chaining Operator



